(()=>{"use strict";var t={279:(t,e,i)=>{t.exports=i.p+"assets/25f0d16bb8cae6f8511d.png"},958:(t,e,i)=>{t.exports=i.p+"assets/6423ac0013dd3434590f.png"},274:(t,e,i)=>{t.exports=i.p+"assets/292b1f762438fabbb367.png"},970:(t,e,i)=>{t.exports=i.p+"assets/e119c3226ab8bec33ee1.png"},235:(t,e,i)=>{t.exports=i.p+"assets/57839b3a70defc2da2b7.png"}},e={};function i(s){var r=e[s];if(void 0!==r)return r.exports;var h=e[s]={exports:{}};return t[s](h,h.exports,i),h.exports}i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var t;i.g.importScripts&&(t=i.g.location+"");var e=i.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var s=e.getElementsByTagName("script");s.length&&(t=s[s.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),i.p=t})(),(()=>{var t=i(279),e=i(958),s=i(274),r=i(970),h=i(235);class n{constructor(t,e,i,s,r){this.elapsedTime=0,this.startTime=0,this.fps=0,this.rAF_id=0,this.renderCallbacks=[],this.updateCallbacks=[],this.canvas=t,this.handleUserInput=e,this.renderCallbacks=i,this.updateCallbacks=s,this.gameLogic=r,this.isGameOver=!1}initialize(){requestAnimationFrame(this.loop.bind(this))}loop(t){if(this.isGameOver)return this.handleUserInput=()=>{},this.renderCallbacks=[],this.updateCallbacks=[],this.gameLogic=()=>{},!1;this.elapsedTime=(t-this.startTime)/1e3,this.startTime=t,this.fps=Math.round(1/this.elapsedTime),this.elapsedTime=Math.min(this.elapsedTime,.1),this.gameLogic(),this.handleUserInput(),this.handleUpdate(this.elapsedTime),this.handleRender(),this.rAF_id=requestAnimationFrame(this.loop.bind(this))}handleUpdate(t){this.updateCallbacks.forEach((e=>{e(t)}))}handleRender(){this.renderCallbacks.forEach((t=>{t()}))}}class a{constructor(){}static load(t){t.forEach((t=>{const e=new Image;e.src=t.url,this.images.push(Object.assign(Object.assign({},t),{src:e}))}))}static getImage(t){return this.images.find((e=>e.name==t))}}a.images=[];class c{constructor(t){this.canvas=t}handleKeydownInput(t,e){this.canvas.addEventListener("keydown",(i=>{t==i.code&&e()}).bind(this),!1)}handleKeyupInput(t,e){this.canvas.addEventListener("keyup",(i=>{t==i.code&&e()}).bind(this),!1)}handleClickInput(t,e){this.canvas.addEventListener("click",(i=>{let s=this.getMousePosition(this.canvas,i);this.isClickInside(s,t)&&e()}).bind(this),!1)}getMousePosition(t,e){var i=t.getBoundingClientRect();return{x:e.clientX-i.left,y:e.clientY-i.top}}isClickInside(t,e){return t.x>e.x&&t.x<e.x+e.width&&t.y<e.y+e.height&&t.y>e.y}}class o{constructor(t){this.context=t.context,this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height,this.image=t.image,t.image.onload=()=>{this.width=t.width,this.height=t.height}}}class d{constructor(){this.safeFrame=0,this.currentFrame=0}spriteSheetRenderer(t){this.safeFrame++,this.currentFrame>5&&(this.currentFrame=0),this.safeFrame>60&&(this.safeFrame=0);let e=this.currentFrame%t.numColumns,i=Math.floor(this.currentFrame/t.numColumns);t.context.drawImage(t.image,e*t.frameWidth,i*t.frameHeight,t.frameWidth,t.frameHeight,t.x-t.radius,t.y-t.radius-.4*t.radius,2*t.radius,2.42*t.radius),this.safeFrame%5==0&&this.currentFrame++}backgroundRenderer(t){t.context.drawImage(t.image,t.x,t.y),t.context.drawImage(t.image,t.x-t.width,t.y)}textRenderer(t){t.context.fillStyle=t.color,t.context.font=`${t.fontSize}px ${t.fontStyle}`,t.context.textAlign=`${t.align}`,t.context.fillText(`${t.text}: ${t.value}`,t.x,t.y)}buttonRenderer(t){let e=t.context.measureText(t.text).width;t.context.beginPath(),t.context.rect(t.x,t.y,t.width,t.height),t.context.fillStyle=t.backgroundColor,t.context.fillRect(t.x,t.y,t.width,t.height),t.context.fill(),t.context.lineWidth=t.borderWidth,t.context.strokeStyle=t.borderColor,t.context.stroke(),t.context.closePath(),t.context.font=`${t.fontSize}pt ${t.fontStyle}`,t.context.fillStyle=t.textColor,t.context.fillText(t.text,375-e/2,200+t.fontSize/2)}}class l extends o{constructor(t){super(t),this.renderer=new d,this.background=t}update(){this.background.x<0&&(this.background.x=this.background.width),this.background.x-=this.background.speed}render(){this.renderer.backgroundRenderer(this.background)}}class u extends o{constructor(t){super(t),this.context=t.context,this.x=t.x,this.y=t.y,this.vx=t.vx,this.vy=t.vy,this.width=t.width,this.height=t.height,this.image=t.image}update(t){}render(){}}class p extends u{constructor(t,e){super(t),this.radius=50,this.jumpLimit=225,this.spriteSheetNumRows=2,this.spriteSheetNumColumns=3,this.userInput=e,this.isJumping=!1,this.isDucking=!1,this.canDuck=!0,this.spriteSheetObject={context:this.context,x:this.x,y:this.y,width:this.image.width,height:this.image.height,frameWidth:this.image.width/this.spriteSheetNumColumns,frameHeight:this.image.height/this.spriteSheetNumRows,numColumns:this.spriteSheetNumColumns,numRows:this.spriteSheetNumRows,radius:50,image:this.image},this.renderer=new d}update(t){this.renderNewSprite("runningsprite"),this.jump(t),this.duck()}jump(t){this.spriteSheetObject.y=this.spriteSheetObject.y>350?350:this.spriteSheetObject.y,this.isJumping&&(this.renderNewSprite("jumpingsprite"),this.spriteSheetObject.y+=this.vy*t,this.canDuck=!1,this.spriteSheetObject.y<this.jumpLimit&&(this.vy=-this.vy),this.spriteSheetObject.y>350&&(this.isJumping=!1,this.canDuck=!0,this.vy=-this.vy,this.renderNewSprite("runningsprite")))}duck(){this.isDucking&&this.canDuck&&!this.isJumping&&(this.renderNewSprite("slidingsprite"),this.height=50)}render(){this.renderer.spriteSheetRenderer(this.spriteSheetObject)}renderNewSprite(t){const e=a.getImage(t);e&&(this.spriteSheetObject.image=e.src)}}class g{constructor(t){this.buttonObject=t,this.renderer=new d}render(){this.renderer.buttonRenderer(this.buttonObject)}}class m extends class{constructor(t){this.context=t.context,this.x=t.x,this.y=t.y,this.text=t.text,this.value=t.value,this.align=t.align,this.fontStyle=t.fontStyle,this.fontSize=t.fontSize,this.color=t.color}}{constructor(t){super(t),this.textObject=t,this.renderer=new d}increaseScore(){this.textObject.value++}render(){this.renderer.textRenderer(this.textObject)}}class b extends u{constructor(t){super(t),this.spriteSheetNumColumns=3,this.spriteSheetNumRows=2,this.vx=t.vx,this.vy=t.vy,this.spriteSheetObject={context:this.context,x:this.x,y:this.y,width:this.image.width,height:this.image.height,frameWidth:this.image.width/this.spriteSheetNumColumns,frameHeight:this.image.height/this.spriteSheetNumRows,numColumns:this.spriteSheetNumColumns,numRows:this.spriteSheetNumRows,radius:50,image:this.image},this.renderer=new d}update(t){this.spriteSheetObject&&(this.spriteSheetObject.x+=this.vx*t)}render(){this.spriteSheetObject&&this.renderer.spriteSheetRenderer(this.spriteSheetObject)}}document.getElementById("my-button"),(new class{constructor(){this.enemySpawnRate=90,this.zombies=[],this.canvas=document.getElementById("my-canvas"),this.context=this.canvas.getContext("2d"),this.canvas.tabIndex=1,this.canvas.focus(),this.inputHanlder=new c(this.canvas),this.preloadImage(),this.background=new l({context:this.context,x:0,y:-300,width:1e3,height:400,speed:2,image:a.getImage("backgroundimage").src}),this.score=new m({context:this.context,text:"Score",x:350,y:50,value:0,fontSize:24,fontStyle:"Arial",align:"center",color:"black"}),this.player=new p({context:this.context,x:50,y:350,vx:0,vy:-200,height:75,width:50,image:a.getImage("runningsprite").src},this.getUserInput.bind(this)),this.popup=new g({context:this.context,x:250,y:150,width:250,height:100,text:"Restart",textColor:"#000000",backgroundColor:"rgba(225,225,225,0.5)",borderWidth:2,borderColor:"#000000",fontStyle:"Kremlin Pro Web",fontSize:24}),this.game=new n(this.canvas,this.player.userInput,[this.background.render.bind(this.background),this.player.render.bind(this.player),this.score.render.bind(this.score)],[this.player.update.bind(this.player),this.background.update.bind(this.background)],this.gameLogic.bind(this))}initialize(){this.zombies=[],this.enemySpawnRate=90,this.score=new m({context:this.context,text:"Score",x:350,y:50,value:0,fontSize:24,fontStyle:"Arial",align:"center",color:"black"}),this.background=new l({context:this.context,x:0,y:-300,width:1e3,height:400,speed:2,image:a.getImage("backgroundimage").src}),this.player=new p({context:this.context,x:50,y:350,vx:0,vy:-200,height:75,width:50,image:a.getImage("runningsprite").src},this.getUserInput.bind(this)),this.game.handleUserInput=this.player.userInput.bind(this.player),this.game.renderCallbacks=[this.background.render.bind(this.background),this.player.render.bind(this.player),this.score.render.bind(this.score)],this.game.updateCallbacks=[this.player.update.bind(this.player),this.background.update.bind(this.background)],this.game.gameLogic=this.gameLogic.bind(this),this.game.isGameOver=!1,this.game.initialize()}gameLogic(){this.spawnEnemy(),this.enemySpawnRate++,this.checkScore(),this.detectCollision()&&(cancelAnimationFrame(this.game.rAF_id),this.game.renderCallbacks.push(this.popup.render.bind(this.popup)),this.game.isGameOver=!0)}spawnEnemy(){let t=new b({context:this.context,x:Math.round(Math.random())?1400:1e3,y:350,vx:-300,vy:0,height:75,width:50,image:a.getImage("zombiesprite").src});90==this.enemySpawnRate&&(this.game.renderCallbacks.push(t.render.bind(t)),this.game.updateCallbacks.push(t.update.bind(t)),this.zombies.push(t),this.enemySpawnRate=0)}checkScore(){this.zombies[0]&&this.zombies[0].spriteSheetObject.x<0&&(this.score.increaseScore(),this.zombies.shift(),this.game.updateCallbacks.splice(2,1),this.game.renderCallbacks.splice(3,1))}detectCollision(){let t;for(let e=0;e<this.zombies.length;e++)if(t=this.zombies[e],this.rectIntersect(this.player.spriteSheetObject.x,this.player.spriteSheetObject.y,this.player.width,this.player.height,t.spriteSheetObject.x,t.spriteSheetObject.y,t.width,t.height))return!0}rectIntersect(t,e,i,s,r,h,n,a){return!(r>i+t||t>n+r||h>s+e||e>a+h)}getUserInput(){const t=new c(this.canvas);t.handleKeydownInput("ArrowUp",(()=>{this.player.isJumping=!0})),t.handleKeydownInput("ArrowDown",(()=>{this.player.isDucking=!0})),t.handleKeyupInput("ArrowDown",(()=>{this.player.isDucking=!1})),t.handleClickInput({x:250,y:150,width:250,height:100},(()=>{this.detectCollision()&&this.initialize()}))}preloadImage(){a.load([{name:"backgroundimage",url:t},{name:"zombiesprite",url:h},{name:"runningsprite",url:s},{name:"jumpingsprite",url:e},{name:"slidingsprite",url:r}])}}).game.initialize()})()})();